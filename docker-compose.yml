services:
  nginx:
    image: nginx:latest
    restart: always
    expose:
      - "80"
    networks:
      - nginx
    volumes:
      - ./ugc_service/src/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ugc_service/src/nginx/configs:/etc/nginx/conf.d:ro
    depends_on:
      - ugc
    ports:
      - "80:80"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.1.2
    container_name: zookeeper
    hostname: zookeeper
    restart: always
    expose:
      - "2181"
    networks:
      - zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: yes

  ugc:
    build: ugc_service
    restart: always
    expose:
      - "8000"
    networks:
      - ugc
    env_file:
      - ./.env.prod

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    expose:
      - "9008"
    networks:
      - kafdrop
    depends_on:
      - broker
    environment:
      - KAFKA_BROKERCONNECT=broker:9192

  broker:
    image: confluentinc/cp-kafka:7.1.2
    container_name: broker
    hostname: broker
    restart: always
    expose:
      - "9092"
      - "9192"
    networks:
      - broker
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_ADVERTISED_HOST_NAME: broker
      ALLOW_PLAINTEXT_LISTENER: yes

  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
    environment:
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_ADVERTISED_HOST_NAME=broker
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=OUTSIDE://:9092,INSIDE://:9192
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=OUTSIDE:PLAINTEXT,INSIDE:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=OUTSIDE://localhost:9092,INSIDE://broker:9192
      - KAFKA_INTER_BROKER_LISTENER_NAME=OUTSIDE

  clickhouse-node1:
    image: yandex/clickhouse-server:21.7.4
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    expose:
      - "8123"
      - "9000"
    networks:
      - clickhouse
    volumes:
      - ./ugc_service/src/db/clickhouse/data/node1:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node2:
    image: yandex/clickhouse-server:21.7.4
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    networks:
      - clickhouse
    volumes:
      - ./ugc_service/src/db/clickhouse/data/node2:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node3:
    image: yandex/clickhouse-server:21.7.4
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    networks:
      - clickhouse
    volumes:
      - ./ugc_service/src/db/clickhouse/data/node3:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node4:
    image: yandex/clickhouse-server:21.7.4
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    networks:
      - clickhouse
    volumes:
      -  ./ugc_service/src/db/clickhouse/data/node4:/etc/clickhouse-server
    depends_on:
      - zookeeper


networks:
  nginx:
    name: ugc_net
  ugc:
    name: ugc_net
  zookeeper:
    name: ugc_net
  kafdrop:
    name: ugc_net
  broker:
    name: ugc_net
  clickhouse:
    name: ugc_net